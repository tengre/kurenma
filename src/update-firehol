#!/bin/bash
#
#
# $Id: update-firehol 26 2016-08-05 15:51:00+04:00 toor $
#
#
_bashlyk=kurenma . bashlyk
#
#
#
udfGetValidIPsOnly() {

	[[ -n "$*" ]] || eval $( udfOnError return iErrorEmptyOrMissingArgument )

	local s sDig sOut

	for s in $*; do

		[[ $s =~ ^[0-9.]+$ ]] && ipcalc "$s" | grep '^INVALID ADDRESS:' && continue
		sipcalc -d4 "$s" | grep '^-\[ERR :' && continue
		sDig=$( dig +short $s | xargs )
		[[ -n "$sDig" ]] && s="$sDig"
		sOut+="$s "

	done >/dev/null 2>&1

	echo ${sOut% *} | tr ' ' '\n' | sort | uniq | xargs

	return 0

}
#
udfMain() {

	[[ $UID == 0 ]] || eval $( udfOnError throw iErrorNotPermitted "You must be root to run this." )

	udfThrowOnCommandNotFound cp dig host grep ipcalc mv sipcalc kurenmas xargs

	local cnf csv ini ipv4Black ipv4Client ipv4White lst pathDat pathIni s sDig

	pathIni=$( _ pathIni )
	pathDat=$( _ pathDat )

	for s in $pathDat $patIni; do

		[[ -n "$s" && -d "$s" ]] || eval $( udfOnError iErrorNoSuchFileOrDir "$s" )

	done

	cnf="/etc/firehol/firehol.conf"
	ini="${pathIni}/ipslist.ini"
	lst="${pathDat}/clients.lst"

	[[ -s $lst ]] && ipv4Client=$(<	$lst)

	udfIni $ini "ipv4White:= ipv4Black:="

	udfDebug 2 && udfShowVariable ipv4White ipv4Black ipv4Client

	eval set -- $( _ sArg )

	cp $cnf ${cnf:0:-3}bak

	if udfIsValidVariable ipv4White; then

		s="ipv4White=\"$( udfGetValidIPsOnly ${ipv4White//[,;]/ } ${1//[,;]/ } $ipv4Client )\""
		[[ -z $ipv4White ]] && ipv4White='127.0.0.1'
		udfDebug 2 "new white list $s"
		sed -i -re "s/ipv4White=.*/$s/" $cnf

	fi

	if udfIsValidVariable ipv4Black; then

		s="ipv4Black=\"$( udfGetValidIPsOnly ${ipv4Black//[,;]/ } ${2//[,;]/ } )\""
		[[ -z $ipv4Black ]] && ipv4Black='1.1.1.1'
		udfDebug 2 "new black list $s"
		sed -i -re "s/ipv4Black=.*/$s/" $cnf

	fi

	printf "\n\n\n---> the differences (if any) --->\n"
	diff -du ${cnf:0:-3}bak $cnf
	printf "\n<--- ------------------------ <---\n\n\n"

	echo "Firehol configuration testing:"
	if firehol debug 2>&1 | grep -A5 "ERROR\|FAILED"; then

		echo "restore old configuration:"
		mv -v ${cnf:0:-3}bak $cnf

		eval $( udfOnError throw iErrorNotValidArgument "$* and/or $ini" )

	else

		echo " OK!"
		echo "Starting new configuration:"

		if echo commit | firehol try; then

			if [[ -n "$*" ]]; then

			    ( kurenmas start & ) &

			fi

			echo " OK."

		else

			echo " FAILED.."

		fi

	fi

}
#
#
#
udfMain
#
