#!/bin/bash
#
_kurenma_sVersion=0.3
eval "_kurenma_aRev=($Id: kurenma 51 2016-09-07 12:20:10+04:00 toor $)"
#
_bashlyk=kurenma . bashlyk
#
#
#
udfUsage() {

    	local sVersion="$_kurenma_sVersion (${_kurenma_aRev[3]}rev${_kurenma_aRev[2]})"

	printf -- "\t%s v%s, Kurenma Service for WireGuard tunnels, (c) 2016\n" "$(_ s0)" "${sVersion}"

#****h* kurenma/kurenma
#  DESCRIPTION
#    kurenma - Kurenma Service for WireGuard tunnels
#  AUTHOR
#    Damir Sh. Yakupov <yds@bk.ru>
#  ARGUMENTS
	cat <<-EOF | tr -d '#'

		Usage: $(_ s0) start|stop
		where:

#			start	- start service
#			stop	- stop  service
#
#		without arguments show this usage and exit

	EOF
	eval $(udfOnError exit)

}
#
udfStopProcess() {

	local pid s

	if udfIsNumber $1; then

		pid=$1
		shift

	else

		pid="$( ps -C "$*" -o pid= | xargs )"

	fi

	for s in 15 9; do

		udfIsNumber $pid || continue

		sleep 1

		udfCheckStarted $pid $* && kill -${s} $pid


	done

	return 0

}
#
udfMain() {

	[[ $UID == 0 ]] || eval $( udfOnError throw iErrorNotPermitted "You must be root to run this." )

	local cmd cmdNetcat fnCtl ini pathIni pathRun pid portAuth s

	DEBUGLEVEL=4

	udfThrowOnCommandNotFound cut echo grep kill killall kurenmac kurenmas nohup printf ps sleep uniq xargs

	pathIni=$( _ pathIni )
	pathRun=$( _ pathRun )

	ini=${pathIni}/kurenma.ini
	fnCtl=${pathRun}/kurenma.pid

	udfIni $ini ':role;portAuth'

	: ${portAuth:=42912}
	cmdNetcat="nc -k -l -v $portAuth"

	case $role in

	 client) cmd=kurenmac;;
	 server) cmd=kurenmas;;
	      *) eval $( udfOnError throw NonValidArgument "role ${role}, (see ${ini})" );;

	esac

	eval set -- $(_ sArg)

	case "$1" in

		start)
			udfDebug 1 "service $cmd starting.."

			cd /
			nohup $cmd </dev/null >/dev/null 2>/dev/null &

			return 0
		;;

		 stop)
			udfDebug 1 "service $cmd stopping.."

			echo stop >> $fnCtl
			udfStopProcess $cmdNetcat

			sleep 5

			[[ -s ${pathRun}/${cmd}.pid ]] && pid=$( head -n 1 ${pathRun}/${cmd}.pid )

			udfStopProcess $pid $cmd

			return 0
		;;

		    *)
			udfDebug 1 && udfUsage
			return 1
		;;

	esac

	return 0
}
#
#
#
udfMain
#
